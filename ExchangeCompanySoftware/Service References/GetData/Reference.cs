//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExchangeCompanySoftware.GetData {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GetData.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckMac", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        bool CheckMac(string strMac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pGetDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet pGetDataSet(string strQry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetDataSet(string strQry);
        
        // CODEGEN: Parameter 'GetCompressDataSetResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompressDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        ExchangeCompanySoftware.GetData.GetCompressDataSetResponse GetCompressDataSet(ExchangeCompanySoftware.GetData.GetCompressDataSetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Dmlexecute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void Dmlexecute(string strQuery, string pUserID, string pPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertMasterRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet InsertMasterRecord(ref string pstrError, System.Data.DataSet pDataset, string strTransType, string[] strTableName, string strCondition, string strPKColumn, string strButtonState, string strBranchCode, System.DateTime dtSystemDate, string strUserId, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMasterRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet UpdateMasterRecord(ref string pstrError, System.Data.DataSet pDataset, string[] strTableName, string strCondition, string strUserId, string strPassword);
        
        // CODEGEN: Parameter 'ExecuteJsonResultResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteJsonResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        ExchangeCompanySoftware.GetData.ExecuteJsonResultResponse ExecuteJsonResult(ExchangeCompanySoftware.GetData.ExecuteJsonResultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertUpdateForm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void InsertUpdateForm(ExchangeCompanySoftware.GetData.InsertParameters isp, ref System.Data.DataSet ds, ref string strError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSchema", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetSchema(string strQry, string strUserId, string strPwd, ref string strError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet DeleteRecord(string[] strTableName, string strCondition, string strUserId, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GETEXETIME", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.DateTime[] GETEXETIME(string strServerLocalPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MultipleDML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        string MultipleDML(string strQuery, string strUserId, string strPwd);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompressDataSet", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCompressDataSetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strQry;
        
        public GetCompressDataSetRequest() {
        }
        
        public GetCompressDataSetRequest(string strQry) {
            this.strQry = strQry;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCompressDataSetResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCompressDataSetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetCompressDataSetResult;
        
        public GetCompressDataSetResponse() {
        }
        
        public GetCompressDataSetResponse(byte[] GetCompressDataSetResult) {
            this.GetCompressDataSetResult = GetCompressDataSetResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteJsonResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteJsonResultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strQuery;
        
        public ExecuteJsonResultRequest() {
        }
        
        public ExecuteJsonResultRequest(string strQuery) {
            this.strQuery = strQuery;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteJsonResultResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteJsonResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExecuteJsonResultResult;
        
        public ExecuteJsonResultResponse() {
        }
        
        public ExecuteJsonResultResponse(byte[] ExecuteJsonResultResult) {
            this.ExecuteJsonResultResult = ExecuteJsonResultResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertParameters : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Data.DataSet dataSetForSaveField;
        
        private string buttonStateField;
        
        private string objectNameField;
        
        private string otherDMLField;
        
        private string transTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Data.DataSet DataSetForSave {
            get {
                return this.dataSetForSaveField;
            }
            set {
                this.dataSetForSaveField = value;
                this.RaisePropertyChanged("DataSetForSave");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ButtonState {
            get {
                return this.buttonStateField;
            }
            set {
                this.buttonStateField = value;
                this.RaisePropertyChanged("ButtonState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
                this.RaisePropertyChanged("ObjectName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string OtherDML {
            get {
                return this.otherDMLField;
            }
            set {
                this.otherDMLField = value;
                this.RaisePropertyChanged("OtherDML");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
                this.RaisePropertyChanged("TransType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : ExchangeCompanySoftware.GetData.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<ExchangeCompanySoftware.GetData.ServiceSoap>, ExchangeCompanySoftware.GetData.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckMac(string strMac) {
            return base.Channel.CheckMac(strMac);
        }
        
        public System.Data.DataSet pGetDataSet(string strQry) {
            return base.Channel.pGetDataSet(strQry);
        }
        
        public System.Data.DataSet GetDataSet(string strQry) {
            return base.Channel.GetDataSet(strQry);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ExchangeCompanySoftware.GetData.GetCompressDataSetResponse ExchangeCompanySoftware.GetData.ServiceSoap.GetCompressDataSet(ExchangeCompanySoftware.GetData.GetCompressDataSetRequest request) {
            return base.Channel.GetCompressDataSet(request);
        }
        
        public byte[] GetCompressDataSet(string strQry) {
            ExchangeCompanySoftware.GetData.GetCompressDataSetRequest inValue = new ExchangeCompanySoftware.GetData.GetCompressDataSetRequest();
            inValue.strQry = strQry;
            ExchangeCompanySoftware.GetData.GetCompressDataSetResponse retVal = ((ExchangeCompanySoftware.GetData.ServiceSoap)(this)).GetCompressDataSet(inValue);
            return retVal.GetCompressDataSetResult;
        }
        
        public void Dmlexecute(string strQuery, string pUserID, string pPassword) {
            base.Channel.Dmlexecute(strQuery, pUserID, pPassword);
        }
        
        public System.Data.DataSet InsertMasterRecord(ref string pstrError, System.Data.DataSet pDataset, string strTransType, string[] strTableName, string strCondition, string strPKColumn, string strButtonState, string strBranchCode, System.DateTime dtSystemDate, string strUserId, string strPassword) {
            return base.Channel.InsertMasterRecord(ref pstrError, pDataset, strTransType, strTableName, strCondition, strPKColumn, strButtonState, strBranchCode, dtSystemDate, strUserId, strPassword);
        }
        
        public System.Data.DataSet UpdateMasterRecord(ref string pstrError, System.Data.DataSet pDataset, string[] strTableName, string strCondition, string strUserId, string strPassword) {
            return base.Channel.UpdateMasterRecord(ref pstrError, pDataset, strTableName, strCondition, strUserId, strPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ExchangeCompanySoftware.GetData.ExecuteJsonResultResponse ExchangeCompanySoftware.GetData.ServiceSoap.ExecuteJsonResult(ExchangeCompanySoftware.GetData.ExecuteJsonResultRequest request) {
            return base.Channel.ExecuteJsonResult(request);
        }
        
        public byte[] ExecuteJsonResult(string strQuery) {
            ExchangeCompanySoftware.GetData.ExecuteJsonResultRequest inValue = new ExchangeCompanySoftware.GetData.ExecuteJsonResultRequest();
            inValue.strQuery = strQuery;
            ExchangeCompanySoftware.GetData.ExecuteJsonResultResponse retVal = ((ExchangeCompanySoftware.GetData.ServiceSoap)(this)).ExecuteJsonResult(inValue);
            return retVal.ExecuteJsonResultResult;
        }
        
        public void InsertUpdateForm(ExchangeCompanySoftware.GetData.InsertParameters isp, ref System.Data.DataSet ds, ref string strError) {
            base.Channel.InsertUpdateForm(isp, ref ds, ref strError);
        }
        
        public System.Data.DataSet GetSchema(string strQry, string strUserId, string strPwd, ref string strError) {
            return base.Channel.GetSchema(strQry, strUserId, strPwd, ref strError);
        }
        
        public System.Data.DataSet DeleteRecord(string[] strTableName, string strCondition, string strUserId, string strPassword) {
            return base.Channel.DeleteRecord(strTableName, strCondition, strUserId, strPassword);
        }
        
        public System.DateTime[] GETEXETIME(string strServerLocalPath) {
            return base.Channel.GETEXETIME(strServerLocalPath);
        }
        
        public string MultipleDML(string strQuery, string strUserId, string strPwd) {
            return base.Channel.MultipleDML(strQuery, strUserId, strPwd);
        }
    }
}
